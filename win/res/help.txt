^^^^^^^^^^^
User Manual
^^^^^^^^^^^


------------
セットアップ
------------

1. リポジトリをクローンもしくはダウンロードし，好きな場所に置きます
2. Unix系の場合は unix/bin/ を，Windowsの場合は win/bin にパスを通します
3. パスを通したら以下のコマンド $ texl setup を叩きます
4. 名前を入力し，セットアップを完了させます
5. 好きな場所でコマンド $ texl init [project name] を叩くことでプロジェクトを生成します


--------------
基本的な使い方
--------------
詳細な使い方は 
    
    $ texl man

を打つと確認できます．ただし，更新は送れるかもしれません．
ここでは，基本的な使い方について説明します．

latex_launcher ではLaTexソースファイルを作成し，最終的にPDFファイルを生成するために
必要となるファイル群を格納したディレクトリをプロジェクトと呼んでいます．
つまり，このプロジェクト内にLaTexのソースファイルや，画像ファイル，実験データを
格納したファイルなどを置いていきます．
後述するコマンドを使うと，ユーザーはこのプロジェクトの型を作ることが出来ます．
プロジェクトの型とはプロジェクト内のディレクトリやLaTexソースファイルなどです．
生成されるプロジェクトのディレクトリ構造は以下のとおりです．
src ディレクトリ下にテンプレートファイルが生成されます．

    [project name]/
    |-  fig/
    |-  data/
    |-  src/
        |-  [project name].tex


------------------
プロジェクトの作成
------------------
プロジェクトの作成は以下のコマンドで行います．

    $ texl init [--path] [--temp] [--title] [project name]

上記のコマンドで，[project name] の名前を持ったディレクトリが生成されます．
オブション引数については以下のとおりです．

    --path, -p
        この引数にディレクトリのパス名を指定した場合は，そのディレクトリ下にプロジェクトが生成されます．
        設定しない場合はカレントディレクトリ下にプロジェクトが生成されます．

    --temp
        この引数に後述するテンプレートファイルの登録名を指定すると，そのテンプレートファイルが生成されます．
        指定されない場合，現在のテンプレートファイルに指定されているテンプレートが生成されます．
        この引数に指定できるのは既に登録済みのテンプレートファイルのみであり，
        指定する際には登録したときの登録名を指定する必要があります．

    --title
        テンプレートファイルに挿入するタイトル名です．
        あとから自分で編集できるため挿入する必要はあまりありません．


------------------------------------
テンプレートファイルを登録し使用する
------------------------------------
プロジェクトを作成すると，プロジェクト/src/ 下にtexファイルが生成されます．
これはテンプレートファイルがコピーされたものであり，
初期状態ではデフォルトテンプレートの内容がコピーされたものが生成されます．
latex_launcher ではお好みのカスタマイズしたテンプレートファイルも素早く生成できるように，
ユーザーが作成したテンプレートファイルを内部に登録することが出来ます．

登録するには set コマンドを実行します．

    $ texl set [temp file] [name]

このコマンドで [temp file] に指定したtexファイルを [name] という名前で登録します．
この [temp file] はパスを受け取ることに注意してください．

次に，登録したテンプレートを「現在のテンプレート」として設定します．
「現在のテンプレート」に設定すると，プロジェクト作成時にいちいち [--temp] 引数を指定する必要がなくなります．
「現在のテンプレート」に設定するには use コマンドを使います．

    $ texl use [name]

上のコマンドにおける [name] は set コマンドにおける [name] と一致している必要があります．

この作業が終わると，プロジェクト生成時に launch コマンドで登録したテンプレートファイルを利用することが出来ます．

***注意点***
テンプレートファイルは基本的には自由に作成したものを使っても動作しますが，以下の点を守って作成するとシステムが100%正常に動作します．

    1. \begin{document} の前に \graphicspath{} を入れる (波括弧内には何も記述しなくても良い)


------------------
テンプレートの削除
------------------
登録したテンプレートに変更を加えた場合や，もう必要がなくなった場合はテンプレートの登録を外せます．
テンプレートを削除するには rm コマンドを使います．

    $ texl rm [name]

上のコマンドにおける [name] は set コマンドで登録した際の [name] である必要があります．
また，デフォルトテンプレートは "default" という登録名で登録されていますが，それは削除できません．


----------------------
プロジェクトを再開する
----------------------
実は launch コマンドを実行すると作成したプロジェクトは「現在のプロジェクト」というものに設定されます．
「現在のプロジェクト」に設定されると，後述するLaTeXソースファイル編集時に有用なコマンドを実行できるようになります．
しかし，launchコマンドで複数のプロジェクトを立ち上げている際は，どのプロジェクトが現在のプロジェクトか
プログラムは判断するのが困難になるため，ユーザーによって「現在のプロジェクト」に登録してもらう必要があります．
「現在のプロジェクト」に登録するには start コマンドを実行します．

    $ texl start [[path]]

カレントディレクトリが設定したいプロジェクトのディレクトリである場合は [path] には何も与える必要はありません．
[path] に何らかのパスを表す文字列を与えると，そのパスが「現在のプロジェクト」に設定されます．

lanch コマンドでプロジェクトを立ち上げた場合は，「現在のプロジェクト」は自動的に立ち上げたプロジェクトに
なるので注意してください．


------------------------------------------
画像のテンプレートコードを出力する(工事中)
------------------------------------------
プロジェクト内のLaTeXソースファイルを編集しているとき，画像を挿入したい場合があります．
そのようなときは，以下のコマンドを叩くと画像挿入のテンプレートコードを出力できます．

    $ texl fig [--window] [image file]

上のコマンドを叩くと [image file] で指定した画像ファイルを挿入するテンプレートコードが出力されます．
出力されたテンプレートコードをコピーし，LaTeXソースファイルに貼り付けて，レイアウトなどを整えれば，素早く画像を挿入できます．
オプション引数については以下のとおりです．

    --window, -w
        このオプション引数には値は不要です．
        このオプション引数を指定すると，別ウィンドウにテンプレートコードが出力されます．
        このオプション引数を指定しない場合，テンプレートコードはコンソール上に出力されます．

***注意点***
[image file] に指定するファイルは必ずプロジェクトディレクトリ下のfigディレクトリ内に置いてください．
また [image file] にはファイル名 (拡張子込み) を入力してください．
誤った入力をすると，画像ファイルが適切に表示されない可能性があります．

[EOF]